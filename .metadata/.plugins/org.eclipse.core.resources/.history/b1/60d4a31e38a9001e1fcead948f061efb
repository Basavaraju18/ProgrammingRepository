package com.hackerrank;

import java.util.ArrayList;
import java.util.List;

public class ClosestNumberSum {
    private static List<Integer> closestNumber(List<Integer> arr) {
        List<Integer> l2 = new ArrayList<Integer>();

        int minDif = Integer.MAX_VALUE;

        for (int i = 0; i < arr.size(); i++) {
            for (int j = i + 1; j < arr.size(); j++) {
                int diff = Math.abs(arr.get(i) - arr.get(j));

                if (diff < minDif) {
                    minDif = diff;

                    // Clear the existing values in the list
                    l2.clear();

                    // Add the current pair to the list
                    l2.add(arr.get(i));
                    l2.add(arr.get(j));
                }
            }
        }

        return l2;
    }

    public static void main(String[] args) {

        List<Integer> l1 = List.of(4, 1, 3, 5, 2);
        List<Integer> closestNumbers = closestNumber(l1);
        System.out.println(closestNumbers);
    }
}



//package com.hackerrank;
//
//import java.util.ArrayList;
//import java.util.List;
//
//public class ClosestNumberSum {
//	private static List<Integer> closetNumber(List<Integer> arr) {
//		// TODO Auto-generated method stub
//		
//		List<Integer> l2 = new ArrayList<Integer>();
//	    
//	    
//	    int minDif = 0;
//	    for(int i = 0; i <arr.size(); i++){
//	        
//	        for(int j = i+1; j < arr.size(); j++ ){
//	            int sum = arr.get(i)-arr.get(j);
//	            if(sum > 0)
//	            {
//	                minDif = sum;
//	                
//	            }
//	            if(sum < minDif){
//	                minDif= sum;
//	               int p=0;
//	                
//	                l2.set(p, arr.get(i));
//	                
//	                l2.set(p+1, arr.get(j));
//	                p++;
//	            }
//	        }
//	    }
//	    return l2;
//
//	    
//	}
//	
//	public static void main(String[] args) {
//		
//		List<Integer> l1 = List.of(4, 1, 3,  5,2);
//		List<Integer> closetNumber = closetNumber(l1);
//		System.out.println(closetNumber);
//	}
//
//	
//
//}
